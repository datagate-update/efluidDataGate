import com.efluid.mail.legacy.MailUtils
import com.efluid.github.GitHubUtils
import com.efluid.jenkins.*

JenkinsUtils jenkinsUtils = new JenkinsUtils(this)

def body = {

  MailUtils mailUtils = new MailUtils(this)
  GitHubUtils gitHubUtils = new GitHubUtils(this)

  def credentialsId = env.credentialsId
  git branch: env.BRANCH_NAME, credentialsId: credentialsId, url: 'git@github.com:efluid/efluidDataGate.git'
  String subject = "Release efluidDataGate ${releaseVersion}"

  try{
    env.JAVA_HOME = "${variables.jdkPathPrefix}11.0.8"
    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: credentials.httpProxyAuthentication, passwordVariable: 'proxyPassword', usernameVariable: 'proxyUsername']]) {
      env.HTTP_PROXY="http://${env.proxyUsername}:${env.proxyPassword}@${variables.httpProxyHost}:${variables.httpProxyPort}"
      env.HTTPS_PROXY="http://${env.proxyUsername}:${env.proxyPassword}@${variables.httpProxyHost}:${variables.httpProxyPort}"
    }
    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: credentials.gpgMavenCentralPassphrase, passwordVariable: 'gpgPassword', usernameVariable: 'gpgUsername']]) {
      sh "mvn -B release:prepare release:perform -Darguments=-Dmaven.test.skip=${skipTest} -DgpgPassphrase=${env.gpgPassword} -DreleaseVersion=${releaseVersion} -DdevelopmentVersion=${developmentVersion} -DaltReleaseDeploymentRepository=releases::releases::${urlArtifactoryRelease}"
    }
    withCredentials([usernamePassword(credentialsId: credentials.efluidGithubAccount, passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
      sh('git push --all ssh://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/efluid/efluidDataGate.git')
    }
	
	sh 'cp efluid-datagate-app/target/efluid-datagate-app-exec.jar efluid-datagate-app/src/docker/build-serv-efluid/standalone-with-h2'
	sh 'cp efluid-datagate-app/src/docker/build-serv-efluid/logback.xml efluid-datagate-app/src/docker/build-serv-efluid/standalone-with-h2'
	sh "docker build -t ${variables.artifactoryDockerRegistryAlias}/efluid-datagate:${releaseVersion} efluid-datagate-app/src/docker/build-serv-efluid/standalone-with-h2"
	sh "docker push ${variables.artifactoryDockerRegistryAlias}/efluid-datagate:${releaseVersion}"
	
	gitHubUtils.createRelease('efluidDataGate',releaseVersion)
	
    String mailDetail = "efluidDataGate tool from open source project https://github.com/efluid/efluidDataGate was successfull released in version ${releaseVersion}"
    mailUtils.mailInfo(subject, mailDetail, destinatairesMail, false)
  } catch (Exception e) {
    String mailDetail = "efluidDataGate tool from open source project https://github.com/efluid/efluidDataGate was in error during release ${releaseVersion}"
    mailUtils.mailError(subject, mailDetail, 'efluidDataGate', releaseVersion, null, destinatairesMail, null)
    throw e
  }
}

if (jenkinsUtils.isCjeProd()) {
    node('socle-jenkins-maven-docker-14-4G') {
        body.call()
    }
} else {
    new EfluidPodTemplate(this).addContainer(new Container(this).containerType("maven-14").memory("4G")).execute() {
        container("maven-14") {
            body.call()
        }
    }
}

return this;
