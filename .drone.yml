kind: pipeline
type: docker
name: default
steps:
  - name: build-all
    image: maven:3-jdk-11
    volumes:
      - name: mvncache
        path: /root/.m2
    commands:
      - mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
      - cp efluid-datagate-app/src/docker/build-ci/* efluid-datagate-app/target
  - name: test-all
    image: maven:3-jdk-11
    volumes:
      - name: mvncache
        path: /root/.m2
    commands:
      - mvn test
  - name: docker
    image: plugins/docker
    volumes:
      - name: dckregistry
        path: /etc/docker/certs.d/micro-server:443
    settings:
      dockerfile: efluid-datagate-app/target/Dockerfile
      repo: micro-server:443/datagate/latest
      registry: micro-server:443
      username:
        from_secret: registry_username
      password:
        from_secret: registry_password
  - name: notification
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      channel: datagate-build
      template: >
        {{#success build.status}}
          Datagate build of commit ${DRONE_COMMIT_MESSAGE} by ${DRONE_COMMIT_AUTHOR} on branch ${DRONE_COMMIT_BRANCH} succeeded
        {{else}}
          Datagate build of commit ${DRONE_COMMIT_MESSAGE} by ${DRONE_COMMIT_AUTHOR} on branch ${DRONE_COMMIT_BRANCH} failed
        {{/success}}
    when:
      status:
        - success
        - failure

volumes:
  - name: mvncache
    host:
      path: /opt/server/build/repository
  - name: dckregistry
    host:
      path: /etc/docker/certs.d/micro-server:443