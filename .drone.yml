kind: pipeline
type: docker
name: default
steps:
  - name: build-all
    image: maven:3-jdk-11
    volumes:
      - name: mvncache
        path: /root/.m2
    commands:
      - mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
      - cp efluid-datagate-app/src/docker/build-ci/* efluid-datagate-app/target
  - name: docker-build
    image: plugins/docker
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    settings:
      dockerfile: efluid-datagate-app/target/Dockerfile
      repo: micro-server:443/datagate/latest
      registry: micro-server:443
      insecure: true
      username:
        from_secret: registry_username
      password:
        from_secret: registry_password
  - name: integration-start
    image: docker:dind
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker rm -f datagate
      - docker run --name datagate -p 8085:8080 -v /opt/server/datagate/cfg:/cfg -v /opt/server/datagate/tmp:/tmp -v /opt/server/datagate/logs:/logs -e TZ=Europe/Paris -d micro-server:443/datagate/latest
  - name: notification
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      channel: datagate-build
      template: >
        {{#success build.status}}
          :sunny: Datagate build of commit "${DRONE_COMMIT_MESSAGE}" by *${DRONE_COMMIT_AUTHOR_NAME}* on branch `${DRONE_COMMIT_BRANCH}` succeeded
        {{else}}
          :fire: Datagate build of commit "${DRONE_COMMIT_MESSAGE}" by *${DRONE_COMMIT_AUTHOR_NAME}* on branch `${DRONE_COMMIT_BRANCH}` failed
        {{/success}}
    when:
      status:
        - success
        - failure

volumes:
  - name: mvncache
    host:
      path: /opt/server/build/repository
  - name: dockersock
    host:
      path: /var/run/docker.sock